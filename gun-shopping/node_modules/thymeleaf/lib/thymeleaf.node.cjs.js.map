{"version":3,"file":"thymeleaf.node.cjs.js","sources":["../src/dialects/Dialect.js","../src/processors/AttributeProcessor.js","../node_modules/@ultraq/array-utils/array-utils.js","../node_modules/@ultraq/object-utils/object-utils.js","../src/expressions/ExpressionProcessor.js","../node_modules/@ultraq/string-utils/string-utils.js","../src/standard/processors/StandardAttrAttributeProcessor.js","../src/standard/processors/StandardEachAttributeProcessor.js","../src/standard/processors/StandardFragmentAttributeProcessor.js","../src/standard/processors/StandardHrefAttributeProcessor.js","../src/utilities/Dom.js","../src/standard/processors/StandardIfAttributeProcessor.js","../src/utilities/TemplateResolver.js","../node_modules/dumb-query-selector/src/dumb-query-selector.js","../src/standard/processors/StandardInsertAttributeProcessor.js","../src/standard/processors/StandardSrcAttributeProcessor.js","../src/standard/processors/StandardTextAttributeProcessor.js","../src/standard/processors/StandardUTextAttributeProcessor.js","../src/standard/StandardDialect.js","../src/Configurations.js","../src/processors/Matcher.js","../src/TemplateEngine.js","../src/Thymeleaf.js"],"sourcesContent":["/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for dialects.\n * \n * @author Emanuel Rabina\n */\nexport default class Dialect {\n\n\t/**\n\t * Constructor, sets this dialect's name and prefix.\n\t * \n\t * @param {String} name\n\t * @param {String} prefix\n\t */\n\tconstructor(name, prefix) {\n\n\t\tthis.name   = name;\n\t\tthis.prefix = prefix;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Common class for attribute processors.\n * \n * @author Emanuel Rabina\n */\nexport default class AttributeProcessor {\n\n\t/**\n\t * Constructor, sets this processor's prefix and name.\n\t * \n\t * @param {String} prefix\n\t * @param {String} name\n\t */\n\tconstructor(prefix, name) {\n\n\t\tthis.prefix = prefix;\n\t\tthis.name   = name;\n\t}\n\n\t/**\n\t * Returns the attribute that was matched on the element.\n\t * \n\t * @param {Element} element\n\t * @return {String}\n\t *   The attribute that matched processing by this processor, or `null` if no\n\t *   match was found.\n\t */\n\tmatches(element) {\n\n\t\tlet {prefix, name} = this;\n\n\t\tlet attribute = `${prefix}:${name}`;\n\t\tif (!element.hasAttribute(attribute)) {\n\t\t\tattribute = `data-${prefix}-${name}`;\n\t\t\tif (!element.hasAttribute(attribute)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\treturn attribute;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Flattens an arrays of arrays into a single array.\n * \n * @param {Array} array\n * @return {Array} Flattened array.\n */\nexport function flatten(array) {\n\n\treturn array.reduce((accumulator, value) => {\n\t\treturn accumulator.concat(Array.isArray(value) ? flatten(value) : value);\n\t}, []);\n}\n\n/**\n * Creates an array of numbers from the starting value (inclusive) to the end\n * (exclusive), with an optional step (the gap between values).\n * \n * @param {Number} start\n *   The value to start at, the first item in the returned array.\n * @param {Number} end\n *   The value to end with, the last item in the returned array.\n * @param {Number} [step=1]\n *   The increment/gap between values, defaults to 1.\n * @return {Array} An array encompassing the given range.\n */\nexport function range(start, end, step = 1) {\n\n\treturn Array.apply(0, Array(Math.ceil((end - start) / step))).map((empty, index) => index * step + start);\n}\n\n/**\n * Remove and return the first item from `array` that matches the predicate\n * function.\n * \n * @param {Array} array\n * @param {Function} predicate\n *   Invoked with the array item.\n * @return {Object} The matching item, or `null` if no match was found.\n */\nexport function remove(array, predicate) {\n\n\treturn array.find((item, index) => {\n\t\tif (predicate(item)) {\n\t\t\tarray.splice(index, 1);\n\t\t\treturn item;\n\t\t}\n\t});\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Deep-merges all of the properties of the objects in `sources` with `target`,\n * modifying the target object and returning it.\n * \n * @param {Object} target\n * @param {...Object} sources\n * @return {Object} The modified target object.\n */\nexport function merge(target = {}, ...sources) {\n\n\tsources.forEach(source => {\n\t\tif (source) {\n\t\t\tObject.keys(source).forEach(key => {\n\t\t\t\tlet targetValue = target[key];\n\t\t\t\tlet sourceValue = source[key];\n\t\t\t\ttarget[key] = targetValue instanceof Object && sourceValue instanceof Object ?\n\t\t\t\t\tmerge(targetValue, sourceValue) :\n\t\t\t\t\tsourceValue;\n\t\t\t});\n\t\t}\n\t});\n\treturn target;\n}\n\n/**\n * Returns a value from an object via a path string that describes the nesting\n * of objects to get to the value.\n * \n * eg:\n * \n * ```\n * let object = {\n *   greeting: {\n *     message: 'Hello!'\n *   }\n * };\n * let pathToMessage = 'greeting.message';\n * ```\n * \n * @param {Object} object\n * @param {String} path A dot-separated string of paths to get to the desired\n *   value within the object\n * @return {Object} The value at the given path within the object, or\n *   `undefined` if the path doesn't resolve within the object.\n */\nexport function navigate(object, path) {\n\n\treturn path.split('.').reduce((previousValue, pathToken) => {\n\t\treturn previousValue && previousValue[pathToken];\n\t}, object);\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {remove}   from '@ultraq/array-utils';\nimport {navigate} from '@ultraq/object-utils';\n\n// TODO: This should really be done using a parser generator like PEG.js so that\n//       we can discern between the various expression syntaxes and so execute\n//       the right functions for handling them.  For now, only assumed\n//       expressions are supported, with separate functions for each of those\n//       best guesses.\n\n/**\n * Parses and evaluates a Thymeleaf expression.\n * \n * @param {String} expression\n * @param {Object} [context={}]\n * @return {String} The result of evaluating the expression.\n */\nexport function processExpression(expression, context = {}) {\n\n\tlet result = /\\$\\{(.+)\\}/.exec(expression);\n\tif (result) {\n\t\tlet [, query] = result;\n\t\treturn navigate(context, query) || '';\n\t}\n\treturn expression;\n}\n\n/**\n * Parses and evaluates a Thymeleaf fragment expression.\n * \n * @param {String} expression\n * @param {Object} [context={}]\n * @return {Object} Information about the fragment expression.\n */\nexport function processFragmentExpression(expression, context = {}) {\n\n\tlet result = /~{ ?(.*?) ?:: ?(.*?)(\\(.*\\))? ?}/.exec(expression);\n\tif (result) {\n\t\tlet [, templateName, fragmentName, parameters] = result;\n\t\tlet prefix = navigate(context, 'templateResolver.prefix');\n\t\tlet suffix = navigate(context, 'templateResolver.suffix');\n\t\treturn {\n\t\t\ttemplateName: (prefix || '') + templateName + (suffix || ''),\n\t\t\tfragmentName,\n\t\t\tparameters\n\t\t};\n\t}\n\treturn null;\n}\n\n/**\n * Parses and evaluates a Thymeleaf iteration expression.\n * \n * @param {String} expression\n * @param {Object} [context={}]\n * @return {Object} Information about the iteration expression.\n */\nexport function processIterationExpression(expression, context = {}) {\n\n\tlet result = /(.+)\\s*:\\s*(\\$\\{.+\\})/.exec(expression);\n\tif (result) {\n\t\tlet [, localValueName, navigationExpression] = result;\n\t\treturn {\n\t\t\tlocalValueName,\n\t\t\titerable: processExpression(navigationExpression, context)\n\t\t};\n\t}\n\treturn null;\n}\n\n/**\n * Parses and evaluates a Thymeleaf link expression.\n * \n * @param {String} expression\n * @param {Object} [context={}]\n * @return {String} The result of evaluating the expression.\n */\nexport function processLinkExpression(expression, context = {}) {\n\n\tlet result = /^@\\{(.+?)(\\(.+\\))?\\}$/.exec(expression);\n\tif (result) {\n\t\tlet [, url, params] = result;\n\t\tif (params) {\n\t\t\tlet paramsList = params.slice(1, -1).split(',').map(param => {\n\t\t\t\tlet [lhs, rhs] = param.split('=');\n\t\t\t\treturn [lhs, processExpression(rhs, context)];\n\t\t\t});\n\n\t\t\t// Fill out any placeholders in the URL from the parameters\n\t\t\twhile (true) { // eslint-disable-line\n\t\t\t\tlet urlTemplate = /(.*?)\\{(.+?)\\}(.*)/.exec(url);\n\t\t\t\tif (urlTemplate) {\n\t\t\t\t\tlet [, head, placeholder, tail] = urlTemplate;\n\t\t\t\t\tlet paramEntry = remove(paramsList, ([lhs]) => lhs === placeholder);\n\t\t\t\t\tif (paramEntry) {\n\t\t\t\t\t\turl = `${head}${paramEntry[1]}${tail}`;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remaining parameters become search query parameters\n\t\t\tif (paramsList.length) {\n\t\t\t\turl += `?${paramsList.map(([key, value]) => `${key}=${value}`).join('&')}`;\n\t\t\t}\n\t\t}\n\t\treturn url;\n\t}\n\treturn expression;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Escapes special HTML characters in a string with their entity code\n * equivalents.\n * \n * @param {String} string\n * @return {String}\n *   HTML escaped string, safe for use in HTML.\n */\nexport function escapeHtml(string) {\n\n\treturn typeof string !== 'string' ? string : string\n\t\t.replace(/&/g, '&amp;')\n\t\t.replace(/</g, '&lt;')\n\t\t.replace(/>/g, '&gt;')\n\t\t.replace(/\"/g, '&quot;')\n\t\t.replace(/'/g, '&#039;');\n}\n\n/**\n * Returns the replacement of each placeholder in a template string with a\n * corresponding replacement value.\n * \n * @param {String} template\n * @param {...String} values\n *   Argument list of values or a single array of values.\n * @return {String}\n *   Replaced template string.\n */\nexport function format(template, ...values) {\n\n\treturn template.replace(/\\{(\\d+)\\}/g, (match, index) => values[+index] + '');\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\nimport {processExpression} from '../../expressions/ExpressionProcessor';\n\nimport {escapeHtml} from '@ultraq/string-utils';\n\n/**\n * JS equivalent of Thymeleaf's `th:attr` attribute processor, modifies or sets\n * a target attribute to whatever its associated expression evaluates to.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardAttrAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'attr';\n\n\t/**\n\t * Constructor, set this processor to use the `attr` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardAttrAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:attr` or `data-th-attr` attribute\n\t * on it, picking out the target attributes and setting them to whatever their\n\t * expressions evaluate to.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tif (/(.+=.+,)*.+=.+/.test(attributeValue)) {\n\t\t\tattributeValue.split(',').forEach(attribute => {\n\t\t\t\tlet attributeParts = attribute.split('=');\n\t\t\t\telement.setAttribute(attributeParts[0], escapeHtml(processExpression(attributeParts[1], context)));\n\t\t\t});\n\t\t}\n\t\t/* istanbul ignore next */\n\t\telse if (process.env.NODE_ENV !== 'test') {\n\t\t\tconsole.warn(`Value to ${attribute}, ${attributeValue}, doesn't seem to contain an attribute assignment expression.  Ignoring.`);\n\t\t}\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor           from '../../processors/AttributeProcessor';\nimport {processIterationExpression} from '../../expressions/ExpressionProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:each` attribute processor, iterates over an\n * [iterable object](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols),\n * executing a piece of template for every iteration.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardEachAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'each';\n\n\t/**\n\t * Constructor, set this processor to use the `each` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardEachAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:each`/`data-th-each` attribute,\n\t * repeating the markup for every object in the iterable value.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\n\t\tlet iterationInfo = processIterationExpression(attributeValue, context);\n\t\tif (iterationInfo) {\n\t\t\tlet {localValueName, iterable} = iterationInfo;\n\t\t\tlet templateNode = element.cloneNode(true);\n\n\t\t\tfor (let value of iterable) {\n\t\t\t\tlet localClone = templateNode.cloneNode(true);\n\t\t\t\tlet localVariable = {};\n\t\t\t\tlocalVariable[localValueName] = value;\n\n\t\t\t\t// TODO: Standardize this data attribute somewhere.  Shared const?\n\t\t\t\t// element.dataset not yet implemented in JSDOM (https://github.com/tmpvar/jsdom/issues/961),\n\t\t\t\t// so until then we're setting data- attributes the old-fashioned way.\n\t\t\t\tlocalClone.setAttribute('data-thymeleaf-local-variables', JSON.stringify(localVariable));\n\n\t\t\t\telement.parentElement.appendChild(localClone);\n\t\t\t}\n\t\t}\n\t\telement.parentElement.removeChild(element);\n\n\t\treturn true;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor from '../../processors/AttributeProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:fragment` attribute processor, marks an\n * element as a template fragment that can be imported by other processors like\n * `th:insert`.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardFragmentAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'fragment';\n\n\t/**\n\t * Constructor, set this processor to use the `fragment` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardFragmentAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:fragment` or `data-th-fragment`\n\t * attribute on it.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\n\t\t// TODO: Some off-context mechanism for encountered fragments?\n\t\tif (!context.fragments) {\n\t\t\tcontext.fragments = [];\n\t\t}\n\t\tcontext.fragments.push({\n\t\t\tname:    attributeValue,\n\t\t\telement: element.cloneNode(true)\n\t\t});\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor      from '../../processors/AttributeProcessor';\nimport {processLinkExpression} from '../../expressions/ExpressionProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:href` attribute processor, applies the\n * expression in the attribute value to the `href` attribute of the element\n * being processed.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardHrefAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'href';\n\n\t/**\n\t * Constructor, set this processor to use the `href` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardHrefAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:href` or `data-th-href` attribute\n\t * on it, taking the possible link expression in the value and applying it to\n\t * the `href` attribute of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.href = encodeURI(processLinkExpression(attributeValue, context));\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global ENVIRONMENT */\n\n/**\n * Removes all of an element's child nodes.\n * \n * @param {Element} element\n */\nexport function clearChildren(element) {\n\n\twhile (element.firstChild) {\n\t\telement.removeChild(element.firstChild);\n\t}\n}\n\n/**\n * Sets a Thymeleaf attribute and value on an existing element.  Used primarily\n * in tests.\n * \n * @param {Element} element\n * @param {String} attribute\n * @param {String} value\n * @return {Element} The same element but with the attribute and value set on it.\n */\nexport function createThymeleafAttributeValue(element, attribute, value) {\n\n\telement.setAttribute(attribute, value);\n\treturn element;\n}\n\n/**\n * Use either JSDOM or the browser's native DOM parsing to deserialize the HTML\n * string into a document fragment.\n * \n * @param {String} htmlString\n * @return {DocumentFragment}\n */\nexport function deserialize(htmlString) {\n\n\treturn ENVIRONMENT === 'browser' ?\n\t\t/* istanbul ignore next */\n\t\tdocument.createRange().createContextualFragment(htmlString) :\n\t\trequire('jsdom').jsdom(htmlString, {\n\t\t\tfeatures: {\n\t\t\t\tFetchExternalResources: false,\n\t\t\t\tProcessExternalResources: false\n\t\t\t}\n\t\t});\n}\n\n/**\n * Use either JSDOM or the browser's native DOM serialization to serialize a\n * document fragment into an HTML string.\n * \n * @param {DocumentFragment} documentFragment\n * @return {String}\n */\nexport function serialize(documentFragment) {\n\n\treturn ENVIRONMENT === 'browser' ?\n\t\t/* istanbul ignore next */\n\t\tnew XMLSerializer().serializeToString(documentFragment) :\n\t\trequire('jsdom').serializeDocument(documentFragment);\n}\n\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\nimport {processExpression} from '../../expressions/ExpressionProcessor';\nimport {clearChildren}     from '../../utilities/Dom';\n\n/**\n * JS equivalent of Thymeleaf's `th:if` attribute processor, includes or\n * excludes the current element and its children from rendering, depending on\n * the evaluation of the expression in the attribute value.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardIfAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'if';\n\n\t/**\n\t * Constructor, set this processor to use the `if` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardIfAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:if` or `data-th-if` attribute\n\t * on it, evaluating the expression for truthy/falsey, rendering/excluding the\n\t * element and its children based on the result.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\tlet expressionResult = processExpression(attributeValue, context);\n\t\tif (!expressionResult) {\n\t\t\tclearChildren(element);\n\t\t\telement.parentNode.removeChild(element);\n\t\t}\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/*\n * Copyright 2018, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {deserialize} from './Dom';\n\n/**\n * A template resolution function that uses the CommonJS module system of the\n * `require` function with a path to the template.\n * \n * @param {String} templatePath\n * @return {DocumentFragment} DOM of the template at the given path, or `null`\n *   if the path didn't resolve to a template.\n */\nexport function resolveTemplate(templatePath) {\n\n\t// TODO: Return a promise of the template as template resolution is best done\n\t//       async (especially in the browser environment).\n\n\t// TODO: `templates` is a special path for recognizing templates, set up by a\n\t//       consuming app's webpack config, setting `resolve.alias` to the path\n\t//       to their templates.  This is a total hack and needs better dynamic\n\t//       support such as a Thymeleaf loader that can pick out other HTML to\n\t//       include.\n\n\ttry {\n\t\treturn deserialize(\n\t\t\t/* global ENVIRONMENT */\n\t\t\tENVIRONMENT === 'browser' ?\n\t\t\t\trequire(`templates/${templatePath}`) :\n\t\t\t\trequire('fs').readFileSync(require('path').resolve(process.cwd(), templatePath))\n\t\t);\n\t}\n\tcatch (error) {\n\t\treturn null;\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * An element selector and shortcut for `(document/element).querySelector`.\n * \n * @param {String} query\n * @param {Node} [scope=document]\n *   The scope to limit the search to for non-ID queries.  Defaults to `document`\n *   scope.\n * @return {Element} The matching element, or `null` if no match is found.\n */\nexport function $(query, scope = document) {\n\n\treturn scope.querySelector(query);\n}\n\n/**\n * An element list selector, returning an array of elements because\n * `NodeList`s are dumb.\n * \n * @param {String} query\n * @param {Node} [scope=document]\n *   The scope to limit the search to for non-ID queries.  Defaults to `document`\n *   scope.\n * @return {Array} The list of matching elements.\n */\nexport function $$(query, scope = document) {\n\n\treturn Array.prototype.slice.call(scope.querySelectorAll(query));\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StandardFragmentAttributeProcessor from './StandardFragmentAttributeProcessor';\nimport StandardDialect                    from '../StandardDialect';\nimport {processFragmentExpression}        from '../../expressions/ExpressionProcessor';\nimport AttributeProcessor                 from '../../processors/AttributeProcessor';\nimport {resolveTemplate}                  from '../../utilities/TemplateResolver';\nimport {clearChildren}                    from '../../utilities/Dom';\n\nimport {$} from 'dumb-query-selector';\n\n/**\n * JS equivalent of Thymeleaf's `th:insert` attribute processor, inserts the\n * referenced template fragment as a child of the current element.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardInsertAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'insert';\n\n\t/**\n\t * Constructor, set this processor to use the `insert` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardInsertAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:insert`/`data-th-insert` attribute,\n\t * replacing the current element's children with the DOM in the referenced\n\t * fragment.\n\t * \n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t * @return {Boolean} Whether or not the parent element needs to do a second\n\t *   pass as its children have been modified by this processor.\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.removeAttribute(attribute);\n\t\tclearChildren(element);\n\n\t\tlet fragmentInfo = processFragmentExpression(attributeValue, context);\n\t\tif (fragmentInfo) {\n\t\t\tlet {templateName, fragmentName} = fragmentInfo;\n\t\t\tlet template = resolveTemplate(templateName);\n\n\t\t\tlet standardDialect = context.dialects.find(dialect => dialect.name === StandardDialect.NAME);\n\t\t\tlet dialectPrefix = standardDialect.prefix;\n\t\t\tlet fragmentProcessorName = StandardFragmentAttributeProcessor.NAME;\n\t\t\tlet fragment =\n\t\t\t\t$(`[${dialectPrefix}\\\\:${fragmentProcessorName}^=\"${fragmentName}\"]`, template) ||\n\t\t\t\t$(`[data-${dialectPrefix}-${fragmentProcessorName}^=\"${fragmentName}\"`, template);\n\n\t\t\telement.appendChild(fragment);\n\t\t}\n\n\t\t// TODO: Processors should be returning promises because this processor can\n\t\t//       have an asynchronous result.\n\t\treturn true;\n\t}\n}\n","/*\n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor      from '../../processors/AttributeProcessor';\nimport {processLinkExpression} from '../../expressions/ExpressionProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:src` attribute processor, applies the\n * expression in the attribute value to the `src` attribute of the element\n * being processed.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardSrcAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'src';\n\n\t/**\n\t * Constructor, set this processor to use the `src` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardSrcAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:src` or `data-th-src` attribute\n\t * on it, taking the possible link expression in the value and applying it to\n\t * the `src` attribute of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.src = encodeURI(processLinkExpression(attributeValue, context));\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\nimport {processExpression} from '../../expressions/ExpressionProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:text` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed, escaping any unsafe input.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardTextAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'text';\n\n\t/**\n\t * Constructor, set this processor to use the `text` name and supplied prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardTextAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:text` or `data-th-text` attribute\n\t * on it, taking the text expression in the value and applying it to the text\n\t * content of the element.\n\t * \n\t * @param {Element} element \n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.textContent = processExpression(attributeValue, context);\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport AttributeProcessor  from '../../processors/AttributeProcessor';\nimport {processExpression} from '../../expressions/ExpressionProcessor';\n\n/**\n * JS equivalent of Thymeleaf's `th:utext` attribute processor, applies the\n * expression in the attribute value to the text content of the element being\n * processed.\n * \n * @author Emanuel Rabina\n */\nexport default class StandardUTextAttributeProcessor extends AttributeProcessor {\n\n\tstatic NAME = 'utext';\n\n\t/**\n\t * Constructor, set this processor to use the `utext` name and supplied\n\t * prefix.\n\t * \n\t * @param {String} prefix\n\t */\n\tconstructor(prefix) {\n\n\t\tsuper(prefix, StandardUTextAttributeProcessor.NAME);\n\t}\n\n\t/**\n\t * Processes an element that contains a `th:utext` or `data-th-utext`\n\t * attribute on it, taking the text expression in the value and applying it to\n\t * the text content of the element.\n\t *\n\t * @param {Element} element\n\t *   Element being processed.\n\t * @param {String} attribute\n\t *   The attribute that was encountered to invoke this processor.\n\t * @param {String} attributeValue\n\t *   The value given by the attribute.\n\t * @param {Object} context\n\t */\n\tprocess(element, attribute, attributeValue, context) {\n\n\t\telement.innerHTML = processExpression(attributeValue, context);\n\t\telement.removeAttribute(attribute);\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport Dialect                            from '../dialects/Dialect';\nimport StandardAttrAttributeProcessor     from './processors/StandardAttrAttributeProcessor';\nimport StandardEachAttributeProcessor     from './processors/StandardEachAttributeProcessor';\nimport StandardFragmentAttributeProcessor from './processors/StandardFragmentAttributeProcessor';\nimport StandardHrefAttributeProcessor     from './processors/StandardHrefAttributeProcessor';\nimport StandardIfAttributeProcessor       from './processors/StandardIfAttributeProcessor';\nimport StandardInsertAttributeProcessor   from './processors/StandardInsertAttributeProcessor';\nimport StandardSrcAttributeProcessor      from './processors/StandardSrcAttributeProcessor';\nimport StandardTextAttributeProcessor     from './processors/StandardTextAttributeProcessor';\nimport StandardUTextAttributeProcessor    from './processors/StandardUTextAttributeProcessor';\n\n/**\n * The out-of-the-box dialect for Thymeleaf, the \"Standard Dialect\".\n * \n * @author Emanuel Rabina\n */\nexport default class StandardDialect extends Dialect {\n\n\tstatic NAME           = 'Standard';\n\tstatic DEFAULT_PREFIX = 'thjs';\n\n\t/**\n\t * Create an instance of this dialect with the name \"Standard\" and\n\t * given prefix, defaulting to \"th\" if not supplied.\n\t * \n\t * @param {String} [prefix='th']\n\t */\n\tconstructor(prefix = StandardDialect.DEFAULT_PREFIX) {\n\n\t\tsuper(StandardDialect.NAME, prefix);\n\t}\n\n\t/**\n\t * Returns the supported standard processors.\n\t * \n\t * @return {Array} A list of the processors included in this dialect.\n\t */\n\tget processors() {\n\n\t\t// TODO: This is a very basic way of imposing the order of attribute\n\t\t//       processors.  It's currently ordered in the same way as OG\n\t\t//       Thymeleaf.  Figure out a 'proper' way to do the ordering.\n\t\tlet {prefix} = this;\n\t\treturn [\n\t\t\tnew StandardInsertAttributeProcessor(prefix),\n\t\t\tnew StandardEachAttributeProcessor(prefix),\n\t\t\tnew StandardIfAttributeProcessor(prefix),\n\t\t\tnew StandardAttrAttributeProcessor(prefix),\n\t\t\tnew StandardHrefAttributeProcessor(prefix),\n\t\t\tnew StandardSrcAttributeProcessor(prefix),\n\t\t\tnew StandardTextAttributeProcessor(prefix),\n\t\t\tnew StandardUTextAttributeProcessor(prefix),\n\t\t\tnew StandardFragmentAttributeProcessor(prefix)\n\t\t];\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport StandardDialect from './standard/StandardDialect';\n\nexport const DEFAULT_CONFIGURATION = {\n\tdialects: [\n\t\tnew StandardDialect()\n\t],\n\tisomorphic: false,\n\ttemplateResolver: {\n\t\tprefix: '',\n\t\tsuffix: ''\n\t}\n};\n\nexport const STANDARD_CONFIGURATION = {\n\t...DEFAULT_CONFIGURATION,\n\tdialects: [\n\t\tnew StandardDialect('th')\n\t],\n\tisomorphic: {\n\t\tprefix: 'thjs'\n\t},\n\ttemplateResolver: {\n\t\tprefix: '',\n\t\tsuffix: '.html'\n\t}\n};\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Return the matching attribute of an element that a processor can work over.\n * \n * @param {Element} element\n * @param {AttributeProcessor} processor\n * @param {Object} isomorphic\n * @return {String}\n *   The attribute that matched processing by this processor, or `null` if no\n *   match was found.\n */\nexport function matchingAttributeProcessor(element, processor, isomorphic) {\n\n\tlet prefixes = [].concat(\n\t\tisomorphic ? isomorphic.prefix : [],\n\t\tprocessor.prefix\n\t);\n\tlet {name} = processor;\n\n\tfor (let prefix of prefixes) {\n\t\tlet attribute;\n\t\tattribute = `${prefix}:${name}`;\n\t\tif (element.hasAttribute(attribute)) {\n\t\t\treturn attribute;\n\t\t}\n\t\tattribute = `data-${prefix}-${name}`;\n\t\tif (element.hasAttribute(attribute)) {\n\t\t\treturn attribute;\n\t\t}\n\t}\n\treturn null;\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {DEFAULT_CONFIGURATION}      from './Configurations';\nimport {matchingAttributeProcessor} from './processors/Matcher';\nimport StandardDialect              from './standard/StandardDialect';\nimport {deserialize, serialize}     from './utilities/Dom';\n\nimport {flatten} from '@ultraq/array-utils';\nimport {merge}   from '@ultraq/object-utils';\n\nconst XML_NAMESPACE_ATTRIBUTE = `xmlns:${StandardDialect.DEFAULT_PREFIX}`;\n\n/**\n * A highly-configurable class responsible for processing the Thymeleaf\n * directives found in HTML documents and fragments.\n * \n * @author Emanuel Rabina\n */\nexport default class TemplateEngine {\n\n\t/**\n\t * Constructor, set up a new template engine instance.\n\t * \n\t * @param {Object} dialects\n\t *   List of dialects to use in the new template engine.  Defaults to just the\n\t *   standard dialect.\n\t * @param {Object} isomorphic\n\t *   Object for indicating whether this template engine is being used on\n\t *   templates meant for both ThymeleafJS and the original Thymeleaf.  If set,\n\t *   expects an object containing additional options for this special\n\t *   \"isomorphic templating\" mode.\n\t * @param {Object} templateResolver\n\t */\n\tconstructor({dialects, isomorphic, templateResolver} = DEFAULT_CONFIGURATION) {\n\n\t\tthis.dialects   = dialects;\n\t\tthis.isomorphic = isomorphic;\n\t\tthis.processors = flatten(dialects.map(dialect => dialect.processors));\n\t\tthis.templateResolver = templateResolver;\n\t}\n\n\t/**\n\t * Process a DOM element.\n\t * \n\t * @private\n\t * @param {Element} element\n\t * @param {Object} [context={}]\n\t * @return {Boolean} Whether or not the parent node needs reprocessing.\n\t */\n\tprocessNode(element, context = {}) {\n\n\t\t// TODO: Standardize this data attribute somewhere.  Shared const?\n\t\t// element.dataset not yet implemented in JSDOM (https://github.com/tmpvar/jsdom/issues/961),\n\t\t// so until then we're getting data- attributes the old-fashioned way.\n\t\t// Alternatively, some kind of variable stack that pops with each move up\n\t\t// the DOM.\n\t\tlet localVariables = JSON.parse(element.getAttribute('data-thymeleaf-local-variables'));\n\t\telement.removeAttribute('data-thymeleaf-local-variables');\n\t\tlet localContext = merge({}, context, localVariables);\n\n\t\t// Process the current element, store whether or not reprocessing of the\n\t\t// parent needs to happen before moving on to this element's children.\n\t\tlet requireReprocessing = this.processors\n\t\t\t.map(processor => {\n\t\t\t\t// let attribute = processor.matches(element);\n\t\t\t\tlet attribute = matchingAttributeProcessor(element, processor, this.isomorphic);\n\t\t\t\treturn attribute ?\n\t\t\t\t\tprocessor.process(element, attribute, element.getAttribute(attribute), localContext) :\n\t\t\t\t\tfalse;\n\t\t\t})\n\t\t\t.reduce((accumulator, processorResult) => accumulator || processorResult, false);\n\n\t\tif (requireReprocessing) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Process this element's children\n\t\tlet reprocess;\n\t\tdo {\n\t\t\treprocess = false;\n\t\t\tfor (let child of element.children) {\n\t\t\t\treprocess = this.processNode(child, localContext);\n\t\t\t\tif (reprocess) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\twhile (reprocess);\n\t}\n\n\t/**\n\t * Process the Thymeleaf template data, returning the processed template.\n\t * \n\t * @param {String} template\n\t * @param {Object} [context={}]\n\t * @return {Promise}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocess(template, context = {}) {\n\n\t\treturn new Promise((resolve, reject) => {\n\t\t\ttry {\n\t\t\t\tlet document = deserialize(template);\n\t\t\t\tlet rootElement = document.firstElementChild;\n\t\t\t\tthis.processNode(rootElement, {\n\t\t\t\t\t...context,\n\t\t\t\t\tdialects: this.dialects,\n\t\t\t\t\ttemplateResolver: this.templateResolver\n\t\t\t\t});\n\n\t\t\t\t// TODO: Special case, remove the xmlns:th namespace from the document.\n\t\t\t\t//       This should be handled like in main Thymeleaf where it's just\n\t\t\t\t//       another processor that runs on the document.\n\t\t\t\tif (rootElement.hasAttribute(XML_NAMESPACE_ATTRIBUTE)) {\n\t\t\t\t\trootElement.removeAttribute(XML_NAMESPACE_ATTRIBUTE);\n\t\t\t\t}\n\n\t\t\t\tlet documentAsString = serialize(document);\n\t\t\t\tresolve(documentAsString);\n\t\t\t}\n\t\t\tcatch (exception) {\n\t\t\t\treject(exception);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Process the Thymeleaf template at the given path, returning a promise of the\n\t * processed template.\n\t * \n\t * @param {String} filePath\n\t * @param {Object} [context={}]\n\t * @return {Promise}\n\t *   A promise resolved with the processed template, or rejected with an error\n\t *   message.\n\t */\n\tprocessFile(filePath, context = {}) {\n\n\t\t/* global ENVIRONMENT */\n\t\treturn ENVIRONMENT === 'browser' ?\n\t\t\tPromise.reject('Cannot use fs.readFile inside a browser') :\n\t\t\tnew Promise((resolve, reject) => {\n\t\t\t\trequire('fs').readFile(filePath, (error, data) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\treject(new Error(error));\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tresolve(this.process(data, context));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n}\n","/* \n * Copyright 2017, Emanuel Rabina (http://www.ultraq.net.nz/)\n * \n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * \n *     http://www.apache.org/licenses/LICENSE-2.0\n * \n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport {STANDARD_CONFIGURATION}        from './Configurations';\nexport {default as TemplateEngine}     from './TemplateEngine';\nexport {default as Dialect}            from './dialects/Dialect';\nexport {default as AttributeProcessor} from './processors/AttributeProcessor';\nexport {default as StandardDialect}    from './standard/StandardDialect';\n"],"names":["Dialect","name","prefix","AttributeProcessor","element","attribute","hasAttribute","flatten","array","reduce","accumulator","value","concat","Array","isArray","remove","predicate","find","item","index","splice","merge","target","sources","forEach","source","keys","key","targetValue","sourceValue","Object","navigate","object","path","split","previousValue","pathToken","processExpression","expression","context","result","exec","query","processFragmentExpression","templateName","fragmentName","parameters","suffix","processIterationExpression","localValueName","navigationExpression","processLinkExpression","url","params","paramsList","slice","map","param","lhs","rhs","urlTemplate","head","placeholder","tail","paramEntry","length","join","escapeHtml","string","replace","StandardAttrAttributeProcessor","NAME","attributeValue","test","attributeParts","setAttribute","process","env","NODE_ENV","warn","removeAttribute","StandardEachAttributeProcessor","iterationInfo","iterable","templateNode","cloneNode","localClone","localVariable","JSON","stringify","parentElement","appendChild","removeChild","StandardFragmentAttributeProcessor","fragments","push","StandardHrefAttributeProcessor","href","encodeURI","clearChildren","firstChild","deserialize","htmlString","ENVIRONMENT","require","jsdom","serialize","documentFragment","serializeDocument","StandardIfAttributeProcessor","expressionResult","parentNode","resolveTemplate","templatePath","readFileSync","resolve","cwd","error","$","scope","document","querySelector","StandardInsertAttributeProcessor","fragmentInfo","template","standardDialect","dialects","dialect","StandardDialect","dialectPrefix","fragmentProcessorName","fragment","StandardSrcAttributeProcessor","src","StandardTextAttributeProcessor","textContent","StandardUTextAttributeProcessor","innerHTML","DEFAULT_PREFIX","processors","DEFAULT_CONFIGURATION","STANDARD_CONFIGURATION","matchingAttributeProcessor","processor","isomorphic","prefixes","XML_NAMESPACE_ATTRIBUTE","TemplateEngine","templateResolver","localVariables","parse","getAttribute","localContext","requireReprocessing","processorResult","reprocess","children","child","processNode","Promise","reject","rootElement","firstElementChild","documentAsString","exception","filePath","readFile","data","Error"],"mappings":"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"}